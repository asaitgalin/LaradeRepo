========================================================================
  БИБЛИОТЕКА АКТИВНЫХ ШАБЛОНОВ. Обзор проекта FileManagerServer
========================================================================

Этот проект FileManagerServer создан автоматически с помощью мастера 
приложений и может использоваться в качестве основы для
написания собственной библиотеки динамической компоновки (DLL).

В этом файле представлена сводка содержимого всех файлов, входящих в состав 
проекта.

FileManagerServer.vcxproj
    Основной файл проекта VC++, автоматически создаваемый с помощью мастера 
    приложений.
    Он содержит данные о версии языка Visual C++, использованной для создания 
    файла, а также сведения о платформах, настройках и свойствах проекта, 
    выбранных с помощью мастера приложений.

FileManagerServer.vcxproj.filters
    Это файл фильтров для проектов VC++, созданный с помощью мастера 
    приложений. 
    Он содержит сведения о сопоставлениях между файлами в вашем проекте и 
    фильтрами. Эти сопоставления используются в среде IDE для группировки 
    файлов с одинаковыми расширениями в одном узле (например файлы ".cpp" 
    сопоставляются с фильтром "Исходные файлы").

FileManagerServer.idl
    В этом файле содержатся определения IDL для библиотеки типов, интерфейсов
    и сопутствующих классов, определенных в проекте.
    Этот файл будет обработан компилятором MIDL для создания следующих 
    компонентов:
        Определения интерфейса C++ и 
            объявления идентификаторов GUID     (FileManagerServer.h).
        Определения идентификаторов GUID        (FileManagerServer_i.c).
        Библиотека типов                        (FileManagerServer.tlb).
        Код маршалинга                          (FileManagerServer_p.c и 
                                                   dlldata.c).

FileManagerServer.h
    В этом файле содержатся определения интерфейса C++ и объявления 
    идентификаторов GUID для элементов, определенных в 
    FileManagerServer.idl. В процессе компиляции файл повторно создается 
    компилятором MIDL.

FileManagerServer.cpp
    В этом файле содержится карта объектов и реализация компонентов экспорта 
    библиотек DLL.

FileManagerServer.rc
    Это список всех ресурсов Microsoft Windows,
    используемых программой.

FileManagerServer.def
    Файл определений модуля, в котором содержатся сведения для компоновщика о 
    файлах экспорта, необходимых для библиотеки DLL. В файле содержатся 
    следующие компоненты экспорта:
        DllGetClassObject
        DllCanUnloadNow
        DllRegisterServer
        DllUnregisterServer
        DllInstall

/////////////////////////////////////////////////////////////////////////////
Другие стандартные файлы:

StdAfx.h, StdAfx.cpp
    Эти файлы используются для построения файла предкомпилированного заголовка 
    (PCH) с именем FileManagerServer.pch и файла предкомпилированных типов 
    с именем StdAfx.obj.

Resource.h
    Стандартный файл заголовков, в котором определяются идентификаторы ресурсов.

/////////////////////////////////////////////////////////////////////////////
Файл проекта прокси/заглушки DLL и определений модуля:

FileManagerServerps.vcxproj
    Файл проекта, необходимый для построения прокси/заглушки DLL.
    Файл IDL основного проекта должен содержать как минимум один интерфейс. 
    Перед построением прокси/заглушки DLL следует скомпилировать файл IDL. В 
    результате этого создаются файлы dlldata.c, FileManagerServer_i.c и 
    FileManagerServer_p.c, необходимые для построения прокси/заглушки DLL.

FileManagerServerps.vcxproj.filters
    Это файл фильтров для проекта прокси/заглушки. Он содержит сведения о 
    сопоставлениях между файлами в вашем проекте и фильтрами. Эти сопоставления 
    используются в среде IDE для группировки файлов с одинаковыми расширениями 
    в одном узле (например файлы «.cpp» сопоставляются с фильтром «Исходные 
    файлы»).

FileManagerServerps.def
    Файл определений модуля, в котором содержатся сведения для компоновщика о 
    компонентах экспорта, необходимых для прокси/заглушки.

/////////////////////////////////////////////////////////////////////////////
Общие заметки:


    С помощью параметра «Поддержка MFC» в схему приложения встраиваются 
    библиотеки классов Microsoft Foundation, что позволяет использовать в 
    приложении классы, объекты и функции MFC.
/////////////////////////////////////////////////////////////////////////////
